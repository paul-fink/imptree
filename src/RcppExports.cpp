// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP _imptree_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// timesTwo
NumericVector timesTwo(NumericVector x);
RcppExport SEXP _imptree_timesTwo(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(timesTwo(x));
    return rcpp_result_gen;
END_RCPP
}
// maxIndexInSet
int maxIndexInSet(NumericVector array, LogicalVector set);
RcppExport SEXP _imptree_maxIndexInSet(SEXP arraySEXP, SEXP setSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type array(arraySEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type set(setSEXP);
    rcpp_result_gen = Rcpp::wrap(maxIndexInSet(array, set));
    return rcpp_result_gen;
END_RCPP
}
// fcmp
int fcmp(const double x, const double y);
RcppExport SEXP _imptree_fcmp(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type x(xSEXP);
    Rcpp::traits::input_parameter< const double >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(fcmp(x, y));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_imptree_rcpp_hello_world", (DL_FUNC) &_imptree_rcpp_hello_world, 0},
    {"_imptree_timesTwo", (DL_FUNC) &_imptree_timesTwo, 1},
    {"_imptree_maxIndexInSet", (DL_FUNC) &_imptree_maxIndexInSet, 2},
    {"_imptree_fcmp", (DL_FUNC) &_imptree_fcmp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_imptree(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
