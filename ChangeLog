# imptree 0.9-0 (2014-12-02)
- bug fixes (utils.h had error
- entropy calculation with log to basis 2
- Minbucket >= 0 now allowed
  Required refactoring of entropy calculation
# imptree 0.8-0 (2013-02-13)
- values for T accepted in  [-1,1]
- renamed bare entropy methods to entropyIDM for
  matching with NPI ones
# imptree 0.7-3 (2013-01-25)
- calcT now returns the value of the criterion - 3 in case of
  interval dominance
# imptree 0.7-2 (2013-01-15)
- major bug fix in minEntropyNPIa: previously 
  algorithm did not converge
- for accuracy assessing within a tree/bag growing process
  the dominance criterion may be passed to 'control_imptree'
  (effectively replacing the direct passing in 'impbag')
# imptree 0.7-1 (2013-01-14)
- another bug fix in minEntropyNPIa:
  segmentation fault on x86_64 architectures as of
  different precision
- improved testing of the c routines
- once again possible to pass maxEntropyMethod as method.param
  if method is 'NPI'
# imptree 0.7-0 (2013-01-08)
- fixed 2 major bugs in minEntropyNPIa:
  one was causing segmentation fault;
  the other was infinite looping
- improved c routine 'fcmp' to allow for a more 
  reasonable double comparison
- more consistent handling when passing controlargs
  to the function 'imptree_control'
# imptree 0.6-3 (2012-12-20)
- cleaning of c code, fixed some warnings
# imptree 0.6-2 (2012-12-18)
- reduced size of examples by using subsets only
# imptree 0.6-1 (2012-12-14)
- fixed help files (were still stating unimplemented NPI)
- reduced size of examples to run: Both in printing and
  computing time
# imptree 0.6-0 (2012-12-14)
- inclusion of NPI as estimation method for class
  probabilities.
# imptree 0.5-4 (2012-11-27)
- fixed c function for calculating the entropy:
  recursion made it unable to run more than once on Windows
# imptree 0.5-3 (2012-11-26)
- splitting up the tree growing algorithm into subroutines
  to allow for input of NPI estimation.
- enhanced the documentation of the basic functions
# imptree 0.5-2 (2012-11-26)
- changed the behaviour of predicting
  the undominated classes are no longer predicted in the
  tree growing process. Class prediction now only takes
  place when calling 'predict'- functions
- refactoring of assossicated method 'accuracy' and 'impbag':
  direct control on the dominace criterion when predicting the
  trees and/or the aggregate
- added documentation for predclass function
# imptree 0.5-1 (2012-11-05)
- added the documentation, yet missing examples to it
# imptree 0.5 (< 2012-11-01)
- initial version with only the basic scripts, lower levels
  of development stage not documented
